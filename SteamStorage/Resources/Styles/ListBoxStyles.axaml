<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:asyncImageLoader="using:AsyncImageLoader"
        xmlns:lvc="using:LiveChartsCore.SkiaSharpView.Avalonia"
        xmlns:utilityModels="using:SteamStorage.Models.UtilityModels"
        xmlns:utilityViewModels="using:SteamStorage.ViewModels.UtilityViewModels"
        xmlns:converters="using:SteamStorage.Resources.Converters"
        xmlns:controls="using:SteamStorage.Resources.Controls">
	
	<Styles.Resources>
		<converters:DoubleLessConverter x:Key="DoubleLessConverter"/>
		<converters:DoubleGreaterConverter x:Key="DoubleGreaterConverter"/>
		<converters:DoubleMultiplicationConverter x:Key="DoubleMultiplicationConverter"/>
		<converters:MarkedPercentConverter x:Key="MarkedPercentConverter"/>
	</Styles.Resources>
	
	<Style Selector="ListBox">
		<Setter Property="SelectionMode" Value="Single"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
	</Style>
	
	<Style Selector="ListBoxItem">
		<Setter Property="Padding" Value="0"/>
	</Style>
	
	<Style Selector="ListBox.NavigationListBox">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
		<Style Selector="^ ListBoxItem">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate x:DataType="utilityModels:NavigationModel">
						<Border Background="Transparent">
							<Grid>
								<Border x:Name="Selected"
								        Height="40" Width="10"
								        CornerRadius="0, 16, 16, 0"
								        HorizontalAlignment="Left"
								        VerticalAlignment="Center"
								        IsVisible="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
								        Classes="FirstAccentBorder"/>
								<Grid x:Name="ContentGrid"
								      Height="60"
								      Margin="20, 0">
									<Border x:Name="ItemBorder"
									        Classes="BigRoundedBorder"
									        Classes.BackgroundBorder="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
									        Opacity="0.5"/>
									<Border x:Name="PointerOverBorder"
									        Classes="BackgroundBorder BigRoundedBorder"
									        Opacity="0"/>
									<Grid x:Name="GridTitle"
									      ColumnDefinitions="60, *">
										<ContentControl Content="{Binding VectorImage, Mode=OneWay}"
										                Margin="14"
										                Grid.Column="0"/>
										<TextBlock x:Name="TitleTextBlock"
										           Text="{Binding Title, Mode=OneWay}"
										           Classes="MiddleTextBlock"
										           IsVisible="True"
										           Grid.Column="1"/>
									</Grid>
								</Grid>	
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style Selector="^:pointerover /template/ Border#PointerOverBorder">
				<Setter Property="Opacity" Value="0.3"/>
			</Style>
		</Style>
		<Style Selector="^.Min ListBoxItem">
			<Style Selector="^ /template/ Grid#ContentGrid">
            	<Setter Property="Margin" Value="20, 0"/>
            </Style>
            <Style Selector="^ /template/ Border#ItemBorder">
                <Setter Property="CornerRadius" Value="8"/>
            </Style>
            <Style Selector="^ /template/ TextBlock#TitleTextBlock">
                <Setter Property="IsVisible" Value="False"/>
            </Style>
		</Style>
	</Style>
	
	<Style Selector="ListBox.GamesListBox">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
		<Style Selector="^ ListBoxItem">
			<Setter Property="Template">
            	<Setter.Value>
            		<ControlTemplate x:DataType="utilityModels:GameModel">
            			<Border x:Name="MainBorder"
            					Classes="BackgroundAdditionalBorder SmallRoundedBorder"
            					Classes.SmallBorder="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
					            Height="60" Width="60"
					            ToolTip.Tip="{Binding Title, Mode=OneWay}">
				            <Border Classes="LittleRoundedBorder"
				                    Height="40" Width="40"
				                    HorizontalAlignment="Center" VerticalAlignment="Center">
            					<Image asyncImageLoader:ImageLoader.Source="{Binding ImageUrl, Mode=OneWay}"/>
            				</Border>
            			</Border>
            		</ControlTemplate>
            	</Setter.Value>
            </Setter>
            <Style Selector="^:pointerover /template/ Border#MainBorder">
            	<Setter Property="Opacity" Value="0.8"/>
            </Style>
		</Style>
		<Style Selector="^.FirstAccentLinearGameListBox ListBoxItem /template/ Border#MainBorder">
            <Setter Property="BorderBrush" Value="{DynamicResource FirstAccentLinearBrush}"/>
        </Style>
        <Style Selector="^.SecondAccentLinearGameListBox ListBoxItem /template/ Border#MainBorder">
            <Setter Property="BorderBrush" Value="{DynamicResource SecondAccentLinearBrush}"/>
        </Style>
        <Style Selector="^.ThirdAccentLinearGameListBox ListBoxItem /template/ Border#MainBorder">
            <Setter Property="BorderBrush" Value="{DynamicResource ThirdAccentLinearBrush}"/>
        </Style>
	</Style>
	
	<Style Selector="ListBox.ListItemsListBox">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
		<Style Selector="^ ListBoxItem">
			<Setter Property="Margin" Value="0, 0, 0, 20"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate x:DataType="utilityViewModels:ListItemViewModel">
						<Border x:Name="MainBorder"
								Classes="BackgroundAdditionalBorder BigRoundedBorder"
						        Height="130">
							
							<Border.ContextMenu>
								<ContextMenu>
									<MenuItem Header="Открыть в Steam" Command="{Binding OpenInSteamCommand}"/>
									<Separator/>
									<MenuItem Header="Добавить в активы" Command="{Binding AddToActivesCommand}"/>
									<Separator/>
									<MenuItem Header="Добавить в архив" Command="{Binding AddToArchiveCommand}"/>
								</ContextMenu>
							</Border.ContextMenu>
							
							<Grid Margin="20">
								
								<Grid.RowDefinitions>
									<RowDefinition Height="90" MinHeight="90"/>
									<RowDefinition Height="10" MinHeight="10"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="140*" MinWidth="100" MaxWidth="140"/>
									<ColumnDefinition Width="20" MinWidth="20"/>
									<ColumnDefinition Width="320*"/>
									<ColumnDefinition Width="20" MinWidth="20"/>
									<ColumnDefinition Width="180*"/>
									<ColumnDefinition Width="20" MinWidth="20"/>
									<ColumnDefinition Width="130*"/>
									<ColumnDefinition Width="20" MinWidth="20"/>
									<ColumnDefinition Width="130*"/>
									<ColumnDefinition Width="20" MinWidth="20"/>
									<ColumnDefinition Width="30*"/>
								</Grid.ColumnDefinitions>
								
								<Border Classes="SmallRoundedBorder BackgroundAdditionalBorder"
								        ToolTip.Tip="Изображение"
								        Grid.Row="0" Grid.Column="0">
									<Image asyncImageLoader:ImageLoader.Source="{Binding ImageUrl, Mode=OneWay}"/>
								</Border>
								<TextBlock Text="{Binding Title, Mode=OneWay}"
								           Classes="MiddleTextBlock LeftTextBlock"
								           Classes.SmallTextBlock="{Binding $parent[ListBoxItem].Bounds.Width, Converter={StaticResource DoubleLessConverter}, ConverterParameter=880}"
								           ToolTip.Tip="Название"
								           Grid.Row="0" Grid.Column="2"/>
								<TextBlock Text="{Binding CurrentPriceString, Mode=OneWay}"
								           Classes="MiddleTextBlock CenterTextBlock"
								           Classes.SmallTextBlock="{Binding $parent[ListBoxItem].Bounds.Width, Converter={StaticResource DoubleLessConverter}, ConverterParameter=880}"
								           ToolTip.Tip="Текущая цена"
								           Grid.Row="0" Grid.Column="4"/>
								<TextBlock Text="{Binding Change7D, StringFormat=N0, Mode=OneWay, 
												  Converter={StaticResource MarkedPercentConverter}, ConverterParameter=2}"
								           Classes="MiddleTextBlock CenterTextBlock"
								           Classes.SmallTextBlock="{Binding $parent[ListBoxItem].Bounds.Width, Converter={StaticResource DoubleLessConverter}, ConverterParameter=880}"
								           Classes.PositiveTextBlock="{Binding Change7D, Mode=OneWay,
																	   Converter={StaticResource DoubleGreaterConverter}, ConverterParameter=0}"
								           Classes.NegativeTextBlock="{Binding Change7D, Mode=OneWay,
																	   Converter={StaticResource DoubleLessConverter}, ConverterParameter=0}"
								           ToolTip.Tip="Изменение (7дн)"
								           Grid.Row="0" Grid.Column="6"/>
								<TextBlock Text="{Binding Change30D, StringFormat=N0, Mode=OneWay, 
												  Converter={StaticResource MarkedPercentConverter}, ConverterParameter=2}"
								           Classes="MiddleTextBlock CenterTextBlock"
								           Classes.SmallTextBlock="{Binding $parent[ListBoxItem].Bounds.Width, Converter={StaticResource DoubleLessConverter}, ConverterParameter=880}"
								           Classes.PositiveTextBlock="{Binding Change30D, Mode=OneWay,
																	   Converter={StaticResource DoubleGreaterConverter}, ConverterParameter=0}"
								           Classes.NegativeTextBlock="{Binding Change30D, Mode=OneWay,
																	   Converter={StaticResource DoubleLessConverter}, ConverterParameter=0}"
								           ToolTip.Tip="Изменение (30дн)"
								           Grid.Row="0" Grid.Column="8"/>
								<CheckBox IsChecked="{Binding IsMarked}"
								          Classes="StarCheckBox" 
								          HorizontalAlignment="Center" VerticalAlignment="Center"
								          Height="24" Width="24"
								          MinHeight="24" MinWidth="24" 
								          Grid.Row="0" Grid.Column="10"/>
								
								<StackPanel x:Name="ChangeStackPanel"
								            Classes.Min="{Binding $self.Bounds.Width, Converter={StaticResource DoubleLessConverter}, ConverterParameter=290}"
								            Opacity="0"
								            Spacing="10"
								            Grid.Row="2" Grid.Column="2">
									<StackPanel Orientation="Horizontal">
										<TextBlock Text="Изменение за период: "
										           Classes="SmallTextBlock LeftTextBlock"/>
										<TextBlock Text="{Binding ChangePeriod, StringFormat=N0, Mode=OneWay,
												   Converter={StaticResource MarkedPercentConverter}, ConverterParameter=2}"
										           Classes="SmallTextBlock CenterTextBlock"
										           Classes.PositiveTextBlock="{Binding ChangePeriod, Mode=OneWay,
																	   Converter={StaticResource DoubleGreaterConverter}, ConverterParameter=0}"
										           Classes.NegativeTextBlock="{Binding ChangePeriod, Mode=OneWay,
																	   Converter={StaticResource DoubleLessConverter}, ConverterParameter=0}"/>
									</StackPanel>
									<StackPanel Orientation="Horizontal">
										<TextBlock Text="Период: "
										           Classes="SmallTextBlock LeftTextBlock"/>
										<TextBlock Text="{Binding DatePeriod, Mode=OneWay}"
										           Classes="SmallTextBlock CenterTextBlock"/>
									</StackPanel>
								</StackPanel>
								
								<Grid x:Name="ChangeChart"
								      Classes.Max="{Binding  #ChangeStackPanel.Bounds.Width, Converter={StaticResource DoubleLessConverter}, ConverterParameter=290}"
								      IsVisible="False"
								      Grid.Row="2" Grid.ColumnSpan="7" Grid.Column="4">
									<Grid.RowDefinitions>
										<RowDefinition Height="55" MinHeight="50"/>
										<RowDefinition Height="5" MinHeight="5"/>
										<RowDefinition Height="35" MinHeight="35"/>
									</Grid.RowDefinitions>
									<Grid Grid.Row="0">
										<TextBlock Text="{Binding NotFoundText, Mode=OneWay}"
										           IsVisible="{Binding NotFoundText, Converter={x:Static StringConverters.IsNotNullOrEmpty}, Mode=OneWay}"
										           Classes="SmallTextBlock CenterTextBlock"/>
										<controls:VectorImage IsVisible="{Binding IsLoading, Mode=OneWay}"
										                      Classes="LoadingVectorImage ForegroundVectorImage"
										                      Height="24" Width="24"
										                      HorizontalAlignment="Center"
										                      VerticalAlignment="Center"/>
										<lvc:CartesianChart Series="{Binding ChangeSeries, Mode=OneWay}"
										                    XAxes="{Binding XAxis, Mode=OneWay}"
										                    YAxes="{Binding YAxis, Mode=OneWay}"
										                    TooltipTextPaint="{Binding TooltipTextPaint, Mode=OneWay}"
										                    TooltipBackgroundPaint="{Binding TooltipBackgroundPaint, Mode=OneWay}"
										                    ZoomMode="X"/>
									</Grid>
									<StackPanel Orientation="Horizontal"
									            Spacing="5"
									            HorizontalAlignment="Right"
									            VerticalAlignment="Bottom"
									            Grid.Row="2">
										<RadioButton Content="1 д"
										             IsChecked="{Binding IsOneDayChecked}"
										             GroupName="Period"
										             Classes="PeriodRadioButton FirstAccentLinearPeriodRadioButton"
										             ToolTip.Tip="1 день"/>
										<RadioButton Content="1 н"
										             IsChecked="{Binding IsOneWeekChecked}"
										             GroupName="Period"
										             Classes="PeriodRadioButton FirstAccentLinearPeriodRadioButton"
										             ToolTip.Tip="1 неделя"/>
										<RadioButton Content="1 м"
										             IsChecked="{Binding IsOneMonthChecked}"
										             GroupName="Period"
										             Classes="PeriodRadioButton FirstAccentLinearPeriodRadioButton"
										             ToolTip.Tip="1 месяц"/>
										<RadioButton Content="1 г"
										             IsChecked="{Binding IsOneYearChecked}"
										             GroupName="Period"
										             Classes="PeriodRadioButton FirstAccentLinearPeriodRadioButton"
										             ToolTip.Tip="1 год"/>
									</StackPanel>
								</Grid>
								
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style Selector="^:selected">
				<Style Selector="^ /template/ Border#MainBorder">
					<Setter Property="Height" Value="235"/>
				</Style>
				<Style Selector="^ /template/ StackPanel#ChangeStackPanel">
					<Setter Property="Opacity" Value="1"/>
				</Style>
				<Style Selector="^ /template/ StackPanel.Min#ChangeStackPanel">
					<Setter Property="Opacity" Value="0"/>
				</Style>
				<Style Selector="^ /template/ Grid#ChangeChart">
					<Setter Property="IsVisible" Value="True"/>
				</Style>
				<Style Selector="^ /template/ Grid.Max#ChangeChart">
					<Setter Property="Column" Value="0"/>
					<Setter Property="ColumnSpan" Value="11"/>
				</Style>
			</Style>
		</Style>
	</Style>
	
	<Style Selector="ListBox.ThemeVariantsListBox">
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
		<Style Selector="^ ListBoxItem">
			<Setter Property="Margin" Value="0, 0, 30, 30"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate x:DataType="utilityModels:ThemeModel">
						<Grid VerticalAlignment="Stretch"
						      Width="{Binding $self.Bounds.Height, Converter={StaticResource DoubleMultiplicationConverter}, ConverterParameter=1.25}">
							
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="30" MinHeight="30"/>
								<RowDefinition Height="30" MinHeight="30"/>
							</Grid.RowDefinitions>
							
							<Border Classes="BigRoundedBorder ForegroundBorderBrush SmallBorder"
							        Grid.Row="0">
								<Border Classes="BigRoundedBorder">
									<ContentControl Content="{Binding Page, Mode=OneWay}"/>
								</Border>
							</Border>
							<Grid HorizontalAlignment="Center" VerticalAlignment="Stretch"
							      Grid.Row="2">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="24" MinWidth="24"/>
									<ColumnDefinition Width="10" MinWidth="10"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<controls:VectorImage x:Name="RadioButtonFalseVectorImage"
								                      Classes="RadioButtonFalseVectorImage ForegroundVectorImage"
								                      Opacity="1"
								                      Height="24" Width="24"
								                      VerticalAlignment="Center"
								                      Grid.Column="0"/>
								<controls:VectorImage x:Name="RadioButtonTrueVectorImage"
								                      Classes="RadioButtonTrueVectorImage ForegroundVectorImage"
								                      Opacity="0"
								                      Height="24" Width="24"
								                      VerticalAlignment="Center"
								                      Grid.Column="0"/>
								<TextBlock Text="{Binding Title, Mode=OneWay}"
                                           Classes="MiddleTextBlock CenterTextBlock"
                                           Height="30"
                                           VerticalAlignment="Center"
                                           Grid.Column="2"/>
							</Grid>
							
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style Selector="^:selected">
				<Style Selector="^ /template/ controls|VectorImage#RadioButtonFalseVectorImage">
					<Setter Property="Opacity" Value="0"/>
				</Style>
				<Style Selector="^ /template/ controls|VectorImage#RadioButtonTrueVectorImage">
					<Setter Property="Opacity" Value="1"/>
				</Style>
			</Style>
		</Style>
	</Style>
	
</Styles>
