<Styles
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:baseModels="clr-namespace:SteamStorage.Models.Tools.UtilityModels.BaseModels"
    xmlns:controls="using:SteamStorage.Resources.Controls"
    xmlns:utilityModels="clr-namespace:SteamStorage.Models.Tools.UtilityModels">

    <Style Selector="ComboBox.BaseComboBox">
        <Setter Property="Background" Value="{DynamicResource BackgroundAdditionalBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="PlaceholderForeground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <ControlTemplate>
                <DataValidationErrors>
                    <Grid Margin="{TemplateBinding Padding}" ColumnDefinitions="*, 40">

                        <Border
                            x:Name="Background"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            Classes="SmallRoundedBorder" />

                        <TextBlock
                            x:Name="PlaceholderTextBlock"
                            Grid.Column="0"
                            Margin="10,0,0,3"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Classes="SmallTextBlock LightTextBlock"
                            Foreground="{TemplateBinding PlaceholderForeground}"
                            IsVisible="{TemplateBinding SelectionBoxItem,
                                                        Converter={x:Static ObjectConverters.IsNull}}"
                            Text="{TemplateBinding PlaceholderText}" />

                        <ContentControl
                            x:Name="ContentPresenter"
                            Grid.Column="0"
                            Margin="10,0,0,3"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding ItemTemplate}" />

                        <Border
                            x:Name="DropDownOverlay"
                            Grid.Column="1"
                            Width="40"
                            Margin="0,1,1,1"
                            HorizontalAlignment="Right"
                            Background="Transparent"
                            IsVisible="False" />

                        <controls:VectorImage
                            x:Name="DropDownGlyph"
                            Grid.Column="1"
                            Width="16"
                            Height="16"
                            Classes="ArrowDownImage"
                            Foreground="{TemplateBinding Foreground}" />

                        <Popup
                            x:Name="PART_Popup"
                            Grid.Column="0"
                            MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            InheritsTransform="True"
                            IsLightDismissEnabled="True"
                            IsOpen="{TemplateBinding IsDropDownOpen,
                                                     Mode=TwoWay}"
                            PlacementTarget="Background"
                            WindowManagerAddShadowHint="False">

                            <Grid Margin="0,5,0,0">

                                <Border BorderThickness="20" Classes="TransparentBorder SmallRoundedBorder BoxShadowBorder" />

                                <Border
                                    x:Name="PopupBorder"
                                    Margin="10,0,10,10"
                                    Classes="TopLevelBackgroundBorder SmallRoundedBorder">

                                    <ScrollViewer
                                        Margin="0,7"
                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                        IsDeferredScrollingEnabled="{TemplateBinding (ScrollViewer.IsDeferredScrollingEnabled)}"
                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">

                                        <ItemsPresenter
                                            x:Name="PART_ItemsPresenter"
                                            Margin="{DynamicResource ComboBoxDropdownContentMargin}"
                                            ItemsPanel="{TemplateBinding ItemsPanel}" />

                                    </ScrollViewer>

                                </Border>

                            </Grid>

                        </Popup>

                    </Grid>
                </DataValidationErrors>
            </ControlTemplate>
        </Setter>
        <Style Selector="^:pointerover /template/ Border#Background">
            <Setter Property="Background" Value="{DynamicResource BackgroundAdditionalBrush}" />
        </Style>
        <Style Selector="^:pressed /template/ Border#Background">
            <Setter Property="Background" Value="{DynamicResource BackgroundAdditionalBrush}" />
        </Style>
        <Style Selector="^:focused:pressed">
            <Style Selector="^ /template/ ContentControl#ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
        </Style>
        <Style Selector="^:focus-visible">
            <Style Selector="^ /template/ ContentControl#ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
        </Style>
        <Style Selector="^:disabled">
            <Style Selector="^ /template/ Border#Background">
                <Setter Property="Background" Value="{DynamicResource BackgroundAdditionalBrush}" />
            </Style>
            <Style Selector="^ /template/ ContentControl#ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
        </Style>
        <Style Selector="^:pressed">
            <Setter Property="Padding" Value="1" />
        </Style>
    </Style>

    <Style Selector="ComboBox.BaseComboBox ComboBoxItem">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="11, 4, 11, 7" />
        <Setter Property="Opacity" Value="0.9" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <ControlTemplate>
                <ContentPresenter
                    x:Name="PART_ContentPresenter"
                    Padding="{TemplateBinding Padding}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    Background="{TemplateBinding Background}"
                    Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    Foreground="{TemplateBinding Foreground}"
                    Opacity="{TemplateBinding Opacity}" />
            </ControlTemplate>
        </Setter>
        <Style Selector="^:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource TopLevelBackgroundLightBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        </Style>
        <Style Selector="^:disabled /template/ ContentPresenter">
            <Setter Property="Opacity" Value="0.5" />
            <Setter Property="Background" Value="{DynamicResource TopLevelBackgroundLightBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        </Style>
        <Style Selector="^:pressed /template/ ContentPresenter">
            <Setter Property="Opacity" Value="1" />
            <Setter Property="Background" Value="{DynamicResource TopLevelBackgroundLightBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        </Style>
        <Style Selector="^:selected">
            <Setter Property="Opacity" Value="1" />
            <Style Selector="^ /template/ ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource TopLevelBackgroundLightBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
            <Style Selector="^:disabled /template/ ContentPresenter">
                <Setter Property="Opacity" Value="0.5" />
                <Setter Property="Background" Value="{DynamicResource TopLevelBackgroundLightBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
            <Style Selector="^:pointerover /template/ ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource TopLevelBackgroundLightBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
            <Style Selector="^:pressed /template/ ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource TopLevelBackgroundLightBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
        </Style>
    </Style>

    <Style Selector="ComboBox.DarkComboBox">
        <Style Selector="^ /template/ Border#Background">
            <Setter Property="CornerRadius" Value="8" />
            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ForegroundBrush}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Opacity" Value="0.5" />
        </Style>
        <Style Selector="^:pointerover /template/ Border#Background">
            <Setter Property="Opacity" Value="0.6" />
        </Style>
        <Style Selector="^:focus /template/ Border#Background">
            <Setter Property="Opacity" Value="0.7" />
        </Style>
    </Style>

    <Style Selector="ComboBox.GroupComboBox">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate x:DataType="baseModels:BaseGroupModel">
                    <Grid ColumnDefinitions="Auto, 10 *">
                        <Border
                            Grid.Column="0"
                            Width="20"
                            Height="20"
                            Background="{Binding Colour, Converter={StaticResource BrushConverter}}"
                            Classes="LittleRoundedBorder" />
                        <TextBlock
                            Grid.Column="2"
                            Classes="SmallTextBlock"
                            Text="{Binding Title}" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style Selector="ComboBox.CurrencyComboBox">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate x:DataType="utilityModels:CurrencyModel">
                    <TextBlock Classes="SmallTextBlock" Text="{Binding Title}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style Selector="ComboBox.PageComboBox">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate x:DataType="utilityModels:PageModel">
                    <TextBlock Classes="SmallTextBlock" Text="{Binding Title}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</Styles>
