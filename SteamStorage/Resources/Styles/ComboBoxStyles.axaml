<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:utilityModels="using:SteamStorage.Models.UtilityModels"
        xmlns:controls="using:SteamStorage.Resources.Controls">
    
    <Style Selector="ComboBox">
        <Setter Property="Background" Value="{DynamicResource BackgroundAdditionalBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="PlaceholderForeground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <ControlTemplate>
                <DataValidationErrors>
                    <Grid ColumnDefinitions="*,40"
                          Margin="{TemplateBinding Padding}">
                        
                        <Border x:Name="Background"
                                Background="{TemplateBinding Background}"
                                Classes="SmallRoundedBorder"
                                Grid.ColumnSpan="2"
                                Grid.Column="0"/>
                        
                        <TextBlock x:Name="PlaceholderTextBlock"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Text="{TemplateBinding PlaceholderText}"
                                   Foreground="{TemplateBinding PlaceholderForeground}"
                                   IsVisible="{TemplateBinding SelectionBoxItem, Converter={x:Static ObjectConverters.IsNull}}" 
                                   Classes="SmallTextBlock LightTextBlock"
                                   Margin="10, 0, 0, 3"
                                   Grid.Column="0"/>
                        
                        <ContentControl x:Name="ContentPresenter"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding ItemTemplate}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                        Margin="10, 0, 0, 3"
                                        Grid.Column="0"/>

                        <Border x:Name="DropDownOverlay"
                                Background="Transparent"
                                Margin="0,1,1,1"
                                Width="40"
                                IsVisible="False"
                                HorizontalAlignment="Right" 
                                Grid.Column="1"/>
                        
                        <controls:VectorImage x:Name="DropDownGlyph"
                                              Classes="ArrowDownImage ForegroundVectorImage"
                                              Height="16" Width="16"
                                              Grid.Column="1"/>

                        <Popup x:Name="PART_Popup"
                               WindowManagerAddShadowHint="False"
                               IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
                               MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                               PlacementTarget="Background"
                               IsLightDismissEnabled="True"
                               InheritsTransform="True"
                               Grid.Column="0">
                            
                            <Grid Margin="0, 5, 0, 0">
                            
                                <Border Classes="TransparentBorder SmallRoundedBorder BoxShadowBorder" 
                                        BorderThickness="20"/>
                            
                                <Border x:Name="PopupBorder"
                                        Classes="TopLevelBackgroundBorder SmallRoundedBorder"
                                        Margin="10, 0, 10, 10">
                                    
                                    <ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                  IsDeferredScrollingEnabled="{TemplateBinding (ScrollViewer.IsDeferredScrollingEnabled)}"
                                                  Margin="0, 7">
                                        
                                        <ItemsPresenter x:Name="PART_ItemsPresenter"
                                                        Margin="{DynamicResource ComboBoxDropdownContentMargin}"
                                                        ItemsPanel="{TemplateBinding ItemsPanel}"/>
                                        
                                    </ScrollViewer>
                                    
                                </Border>
                            
                            </Grid>
                            
                        </Popup>
                        
                    </Grid>
                </DataValidationErrors>
            </ControlTemplate>
        </Setter>
        <Style Selector="^:pointerover /template/ Border#Background">
            <Setter Property="Background" Value="{DynamicResource BackgroundAdditionalBrush}"/>
        </Style>
        <Style Selector="^:pressed /template/ Border#Background">
            <Setter Property="Background" Value="{DynamicResource BackgroundAdditionalBrush}"/>
        </Style>
        <Style Selector="^:focused:pressed">
            <Style Selector="^ /template/ ContentControl#ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
            <Style Selector="^ /template/ PathIcon#DropDownGlyph">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
        </Style>
        <Style Selector="^:focus-visible">
            <Style Selector="^ /template/ ContentControl#ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
            <Style Selector="^ /template/ PathIcon#DropDownGlyph">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
        </Style>
        <Style Selector="^:disabled">
            <Style Selector="^ /template/ Border#Background">
                <Setter Property="Background" Value="{DynamicResource BackgroundAdditionalBrush}" />
            </Style>
            <Style Selector="^ /template/ ContentControl#ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
            <Style Selector="^ /template/ PathIcon#DropDownGlyph">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Style>
        </Style>
        <Style Selector="^:pointerover">
            <Setter Property="Opacity" Value="0.9"/>
        </Style>
        <Style Selector="^:pressed">
            <Setter Property="Padding" Value="1"/>
        </Style>
    </Style>
    
    <Style Selector="ComboBoxItem">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="11, 4, 11, 7"/>
        <Setter Property="Opacity" Value="0.9"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <ControlTemplate>
                <ContentPresenter x:Name="PART_ContentPresenter"
                                  Foreground="{TemplateBinding Foreground}"
                                  Background="{TemplateBinding Background}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Content="{TemplateBinding Content}"
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Opacity="{TemplateBinding Opacity}"
                                  Padding="{TemplateBinding Padding}" />
            </ControlTemplate>
        </Setter>
        <Style Selector="^:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource TopLevelBackgroundLightBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource TopLevelForegroundBrush}"/>
        </Style>
        <Style Selector="^:disabled /template/ ContentPresenter">
            <Setter Property="Opacity" Value="0.5"/>
            <Setter Property="Background" Value="{DynamicResource TopLevelBackgroundLightBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource TopLevelForegroundBrush}" />
        </Style>
        <Style Selector="^:pressed /template/ ContentPresenter">
            <Setter Property="Opacity" Value="1"/>
            <Setter Property="Background" Value="{DynamicResource TopLevelBackgroundLightBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource TopLevelForegroundBrush}"/>
        </Style>
        <Style Selector="^:selected">
            <Setter Property="Opacity" Value="1"/>
            <Style Selector="^ /template/ ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource TopLevelBackgroundLightBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            </Style>
            <Style Selector="^:disabled /template/ ContentPresenter">
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="Background" Value="{DynamicResource TopLevelBackgroundLightBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            </Style>
            <Style Selector="^:pointerover /template/ ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource TopLevelBackgroundLightBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            </Style>
            <Style Selector="^:pressed /template/ ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource TopLevelBackgroundLightBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            </Style>
        </Style>
    </Style>
    
    <Style Selector="ComboBox.GroupComboBox">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate x:DataType="utilityModels:BaseGroupModel">
                    <TextBlock Text="{Binding Title}"
                               Classes="SmallTextBlock"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style Selector="ComboBox.CurrencyComboBox">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate x:DataType="utilityModels:CurrencyModel">
                    <TextBlock Text="{Binding Title}"
                               Classes="SmallTextBlock"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style Selector="^ /template/ Border#Background">
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>
    </Style>
        
</Styles>
